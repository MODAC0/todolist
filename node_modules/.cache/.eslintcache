[{"/Users/user/Desktop/workspace/todo-list/src/index.js":"1","/Users/user/Desktop/workspace/todo-list/src/App.js":"2","/Users/user/Desktop/workspace/todo-list/src/Style.js":"3","/Users/user/Desktop/workspace/todo-list/src/Pages/AddPage.js":"4","/Users/user/Desktop/workspace/todo-list/src/Components/Header.js":"5","/Users/user/Desktop/workspace/todo-list/src/Components/TodoList.js":"6","/Users/user/Desktop/workspace/todo-list/src/Components/TagList.js":"7","/Users/user/Desktop/workspace/todo-list/src/Pages/MainPage.js":"8"},{"size":276,"mtime":1675921360228,"results":"9","hashOfConfig":"10"},{"size":1405,"mtime":1675923637207,"results":"11","hashOfConfig":"10"},{"size":4505,"mtime":1675598526696,"results":"12","hashOfConfig":"10"},{"size":1105,"mtime":1675783103423,"results":"13","hashOfConfig":"10"},{"size":668,"mtime":1675924778668,"results":"14","hashOfConfig":"10"},{"size":1163,"mtime":1675780810878,"results":"15","hashOfConfig":"10"},{"size":1592,"mtime":1675780981447,"results":"16","hashOfConfig":"10"},{"size":500,"mtime":1675599351307,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hmz4ln",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/user/Desktop/workspace/todo-list/src/index.js",[],[],"/Users/user/Desktop/workspace/todo-list/src/App.js",[],[],"/Users/user/Desktop/workspace/todo-list/src/Style.js",[],[],"/Users/user/Desktop/workspace/todo-list/src/Pages/AddPage.js",["44"],[],"/Users/user/Desktop/workspace/todo-list/src/Components/Header.js",[],[],"/Users/user/Desktop/workspace/todo-list/src/Components/TodoList.js",["45","46"],[],"import React, { Fragment, useState } from \"react\";\nimport {\n  TodoListSection,\n  TodoHeader,\n  ListTitle,\n  OtherBtn,\n  ListUl,\n  Radio,\n  TodoLi,\n  TodoText,\n  DeleteBtn,\n} from \"../Style\";\n\nexport const Todo = ({ cate, list }) => {\n  const handleRemove = (index) => {};\n  return (\n    <Fragment>\n      {list.map((data, i) => {\n        if (data.cate === cate)\n          return (\n            <TodoLi key={i}>\n              <Radio type={\"radio\"} />\n              <TodoText>{data.todo}</TodoText>\n              <DeleteBtn\n                src=\"img/close_btn.svg\"\n                alt=\"닫기 버튼\"\n                onClick={(e) => handleRemove(e)}\n              ></DeleteBtn>\n            </TodoLi>\n          );\n      })}\n    </Fragment>\n  );\n};\n\nexport const TodoList = ({ tags, todo }) => {\n  return (\n    <Fragment>\n      {tags.map((cate, i) => (\n        <TodoListSection key={i}>\n          <TodoHeader>\n            <ListTitle>{cate}</ListTitle>\n            <OtherBtn src=\"img/Other_btn.svg\" />\n          </TodoHeader>\n          <ListUl>\n            <Todo cate={cate} list={todo} />\n          </ListUl>\n        </TodoListSection>\n      ))}\n    </Fragment>\n  );\n};\n","/Users/user/Desktop/workspace/todo-list/src/Components/TagList.js",["47","48"],[],"//태그기능 구현\nimport { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { TagsList, ListTitle } from \"../Style\";\nexport const TagList = ({ tags, setTags, isOn, setIsOn }) => {\n  const location = useLocation().pathname;\n\n  const handleTag = (e) => {\n    setIsOn(() => e.target.textContent);\n  };\n\n  const removeTags = (indexToRemove) => {\n    setTags(tags.filter((_, index) => index !== indexToRemove));\n  };\n\n  const addTags = (event) => {\n    if (\n      event.key === \"Enter\" &&\n      event.target.value !== \"\" &&\n      !tags.includes(event.target.value)\n    ) {\n      setTags([...tags, event.target.value]);\n      event.target.value = \"\";\n    }\n  };\n  return (\n    <>\n      <TagsList>\n        <ListTitle className=\"title\">태그</ListTitle>\n        <ul>\n          {tags.map((tag, index) => (\n            <li\n              key={index}\n              onClick={(e) => handleTag(e)}\n              className={`${tag === isOn ? \"one-tag\" : \"tag\"}`}\n            >\n              {tag}\n              <img\n                src=\"img/tag_close_btn.svg\"\n                onClick={() => removeTags(index)}\n                className={`tag-close-icon ${\n                  location === \"/add\" ? null : \"closebtn-delete\"\n                }`}\n              />\n            </li>\n          ))}\n        </ul>\n        <input\n          className={location === \"/add\" ? null : \"input-delete\"}\n          type=\"text\"\n          onKeyUp={(e) => {\n            addTags(e);\n          }}\n          placeholder=\"태그를 입력해 주세요.\"\n        />\n      </TagsList>\n    </>\n  );\n};\n","/Users/user/Desktop/workspace/todo-list/src/Pages/MainPage.js",[],[],{"ruleId":"49","severity":1,"message":"50","line":10,"column":11,"nodeType":"51","messageId":"52","endLine":10,"endColumn":18},{"ruleId":"49","severity":1,"message":"53","line":1,"column":27,"nodeType":"51","messageId":"52","endLine":1,"endColumn":35},{"ruleId":"54","severity":1,"message":"55","line":18,"column":27,"nodeType":"56","messageId":"57","endLine":18,"endColumn":29},{"ruleId":"49","severity":1,"message":"53","line":2,"column":10,"nodeType":"51","messageId":"52","endLine":2,"endColumn":18},{"ruleId":"58","severity":1,"message":"59","line":38,"column":15,"nodeType":"60","endLine":44,"endColumn":17},"no-unused-vars","'TodoAdd' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]