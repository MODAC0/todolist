{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/workspace/todo-list/src/Pages/MainPage.js\";\nimport React from \"react\";\nimport Header from \"../Components/Header\";\nimport { TodoList } from \"../Components/TodoList\";\nimport { TagList } from \"../Components/TagList\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MainPage = _ref => {\n  let {\n    tags,\n    setTags,\n    data,\n    setData,\n    setIsOn,\n    isOn\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      Title: \"오늘의 할 일\",\n      Subtext: \"자정이 지나면 달성한 할 일들이 초기화 돼요!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TagList, {\n      tags: tags,\n      setTags: setTags,\n      isOn: isOn,\n      setIsOn: setIsOn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      data: data,\n      isOn: isOn,\n      setData: setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","Header","TodoList","TagList","MainPage","tags","setTags","data","setData","setIsOn","isOn"],"sources":["/Users/user/Desktop/workspace/todo-list/src/Pages/MainPage.js"],"sourcesContent":["import React from \"react\";\nimport Header from \"../Components/Header\";\nimport { TodoList } from \"../Components/TodoList\";\nimport { TagList } from \"../Components/TagList\";\n\nexport const MainPage = ({ tags, setTags, data, setData, setIsOn, isOn }) => {\n  return (\n    <>\n      <Header\n        Title={\"오늘의 할 일\"}\n        Subtext={\"자정이 지나면 달성한 할 일들이 초기화 돼요!\"}\n      ></Header>\n      <TagList tags={tags} setTags={setTags} isOn={isOn} setIsOn={setIsOn} />\n      <TodoList data={data} isOn={isOn} setData={setData} />\n    </>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,OAAO,QAAQ,uBAAuB;AAAC;AAAA;AAEhD,OAAO,MAAMC,QAAQ,GAAG,QAAqD;EAAA,IAApD;IAAEC,IAAI;IAAEC,OAAO;IAAEC,IAAI;IAAEC,OAAO;IAAEC,OAAO;IAAEC;EAAK,CAAC;EACtE,oBACE;IAAA,wBACE,QAAC,MAAM;MACL,KAAK,EAAE,SAAU;MACjB,OAAO,EAAE;IAA4B;MAAA;MAAA;MAAA;IAAA,QAC7B,eACV,QAAC,OAAO;MAAC,IAAI,EAAEL,IAAK;MAAC,OAAO,EAAEC,OAAQ;MAAC,IAAI,EAAEI,IAAK;MAAC,OAAO,EAAED;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,eACvE,QAAC,QAAQ;MAAC,IAAI,EAAEF,IAAK;MAAC,IAAI,EAAEG,IAAK;MAAC,OAAO,EAAEF;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACrD;AAEP,CAAC;AAAC,KAXWJ,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}